import{O as L}from"./overlayeventbus.esm.2d5707d2.js";import{s as x}from"./portal.esm.f9c19ffd.js";import{Z as f,E as r,J as V,U as N,R as O,K as b,o,b as d,k as c,H as g,n as S,q as h,F as u,f as m,t as p,G as K,l as y,e as v,w as C,T,p as E}from"./entry.a8bdde5b.js";import z from"./tree.esm.8e23cb4f.js";var I={name:"TreeSelect",emits:["update:modelValue","before-show","before-hide","change","show","hide","node-select","node-unselect","node-expand","node-collapse","focus","blur"],props:{modelValue:null,options:Array,scrollHeight:{type:String,default:"400px"},placeholder:{type:String,default:null},disabled:{type:Boolean,default:!1},tabindex:{type:Number,default:null},selectionMode:{type:String,default:"single"},appendTo:{type:String,default:"body"},emptyMessage:{type:String,default:null},display:{type:String,default:"comma"},metaKeySelection:{type:Boolean,default:!0},inputId:{type:String,default:null},inputClass:{type:[String,Object],default:null},inputStyle:{type:Object,default:null},inputProps:{type:null,default:null},panelClass:{type:[String,Object],default:null},panelProps:{type:null,default:null},"aria-labelledby":{type:String,default:null},"aria-label":{type:String,default:null}},data(){return{focused:!1,overlayVisible:!1,expandedKeys:{}}},watch:{modelValue:{handler:function(){this.selfChange||this.updateTreeState(),this.selfChange=!1},immediate:!0},options(){this.updateTreeState()}},outsideClickListener:null,resizeListener:null,scrollHandler:null,overlay:null,selfChange:!1,beforeUnmount(){this.unbindOutsideClickListener(),this.unbindResizeListener(),this.scrollHandler&&(this.scrollHandler.destroy(),this.scrollHandler=null),this.overlay&&(f.clear(this.overlay),this.overlay=null)},mounted(){this.updateTreeState()},methods:{show(){this.$emit("before-show"),this.overlayVisible=!0},hide(){this.$emit("before-hide"),this.overlayVisible=!1,this.$refs.focusInput.focus()},onFocus(e){this.focused=!0,this.$emit("focus",e)},onBlur(e){this.focused=!1,this.$emit("blur",e)},onClick(e){!this.disabled&&(!this.overlay||!this.overlay.contains(e.target))&&!r.hasClass(e.target,"p-treeselect-close")&&(this.overlayVisible?this.hide():this.show(),this.$refs.focusInput.focus())},onSelectionChange(e){this.selfChange=!0,this.$emit("update:modelValue",e),this.$emit("change",e)},onNodeSelect(e){this.$emit("node-select",e),this.selectionMode==="single"&&this.hide()},onNodeUnselect(e){this.$emit("node-unselect",e)},onNodeToggle(e){this.expandedKeys=e},onKeyDown(e){switch(e.code){case"ArrowDown":this.onArrowDownKey(e);break;case"Space":case"Enter":this.onEnterKey(e);break;case"Escape":this.onEscapeKey(e);break}},onArrowDownKey(e){this.overlayVisible||(this.show(),this.$nextTick(()=>{const l=[...r.find(this.$refs.tree.$el,".p-treenode")].find(n=>n.getAttribute("tabindex")==="0");r.focus(l)}),e.preventDefault())},onEnterKey(e){this.overlayVisible?this.hide():this.onArrowDownKey(e),e.preventDefault()},onEscapeKey(e){this.overlayVisible&&(this.hide(),e.preventDefault())},onOverlayEnter(e){f.set("overlay",e,this.$primevue.config.zIndex.overlay),this.alignOverlay(),this.bindOutsideClickListener(),this.bindScrollListener(),this.bindResizeListener(),this.scrollValueInView(),this.$emit("show")},onOverlayLeave(){this.unbindOutsideClickListener(),this.unbindScrollListener(),this.unbindResizeListener(),this.$emit("hide"),this.overlay=null},onOverlayAfterLeave(e){f.clear(e)},alignOverlay(){this.appendTo==="self"?r.relativePosition(this.overlay,this.$el):(this.overlay.style.minWidth=r.getOuterWidth(this.$el)+"px",r.absolutePosition(this.overlay,this.$el))},bindOutsideClickListener(){this.outsideClickListener||(this.outsideClickListener=e=>{this.overlayVisible&&this.isOutsideClicked(e)&&this.hide()},document.addEventListener("click",this.outsideClickListener))},unbindOutsideClickListener(){this.outsideClickListener&&(document.removeEventListener("click",this.outsideClickListener),this.outsideClickListener=null)},bindScrollListener(){this.scrollHandler||(this.scrollHandler=new V(this.$refs.container,()=>{this.overlayVisible&&this.hide()})),this.scrollHandler.bindScrollListener()},unbindScrollListener(){this.scrollHandler&&this.scrollHandler.unbindScrollListener()},bindResizeListener(){this.resizeListener||(this.resizeListener=()=>{this.overlayVisible&&!r.isTouchDevice()&&this.hide()},window.addEventListener("resize",this.resizeListener))},unbindResizeListener(){this.resizeListener&&(window.removeEventListener("resize",this.resizeListener),this.resizeListener=null)},isOutsideClicked(e){return!(this.$el.isSameNode(e.target)||this.$el.contains(e.target)||this.overlay&&this.overlay.contains(e.target))},overlayRef(e){this.overlay=e},onOverlayClick(e){L.emit("overlay-click",{originalEvent:e,target:this.$el})},onOverlayKeydown(e){e.code==="Escape"&&this.hide()},findSelectedNodes(e,t,l){if(e){if(this.isSelected(e,t)&&(l.push(e),delete t[e.key]),Object.keys(t).length&&e.children)for(let n of e.children)this.findSelectedNodes(n,t,l)}else for(let n of this.options)this.findSelectedNodes(n,t,l)},isSelected(e,t){return this.selectionMode==="checkbox"?t[e.key]&&t[e.key].checked:t[e.key]},updateTreeState(){let e={...this.modelValue};this.expandedKeys={},e&&this.options&&this.updateTreeBranchState(null,null,e)},updateTreeBranchState(e,t,l){if(e){if(this.isSelected(e,l)&&(this.expandPath(t),delete l[e.key]),Object.keys(l).length&&e.children)for(let n of e.children)t.push(e.key),this.updateTreeBranchState(n,t,l)}else for(let n of this.options)this.updateTreeBranchState(n,[],l)},expandPath(e){if(e.length>0)for(let t of e)this.expandedKeys[t]=!0},scrollValueInView(){if(this.overlay){let e=r.findSingle(this.overlay,"li.p-highlight");e&&e.scrollIntoView({block:"nearest",inline:"start"})}}},computed:{containerClass(){return["p-treeselect p-component p-inputwrapper",{"p-treeselect-chip":this.display==="chip","p-disabled":this.disabled,"p-focus":this.focused,"p-inputwrapper-filled":!this.emptyValue,"p-inputwrapper-focus":this.focused||this.overlayVisible}]},labelClass(){return["p-treeselect-label",{"p-placeholder":this.label===this.placeholder,"p-treeselect-label-empty":!this.placeholder&&this.emptyValue}]},panelStyleClass(){return["p-treeselect-panel p-component",this.panelClass,{"p-input-filled":this.$primevue.config.inputStyle==="filled","p-ripple-disabled":this.$primevue.config.ripple===!1}]},selectedNodes(){let e=[];if(this.modelValue&&this.options){let t={...this.modelValue};this.findSelectedNodes(null,t,e)}return e},label(){let e=this.selectedNodes;return e.length?e.map(t=>t.label).join(", "):this.placeholder},emptyMessageText(){return this.emptyMessage||this.$primevue.config.locale.emptyMessage},emptyValue(){return!this.modelValue||Object.keys(this.modelValue).length===0},emptyOptions(){return!this.options||this.options.length===0},listId(){return N()+"_list"}},components:{TSTree:z,Portal:x},directives:{ripple:O}};const B={class:"p-hidden-accessible"},H=["id","disabled","tabindex","aria-labelledby","aria-label","aria-expanded","aria-controls"],A={class:"p-treeselect-label-container"},D={class:"p-treeselect-token-label"},P=["aria-expanded"],U=c("span",{class:"p-treeselect-trigger-icon pi pi-chevron-down"},null,-1),M={key:0,class:"p-treeselect-empty-message"};function j(e,t,l,n,a,i){const k=b("TSTree"),w=b("Portal");return o(),d("div",{ref:"container",class:S(i.containerClass),onClick:t[7]||(t[7]=(...s)=>i.onClick&&i.onClick(...s))},[c("div",B,[c("input",g({ref:"focusInput",id:l.inputId,type:"text",role:"combobox",class:l.inputClass,style:l.inputStyle,readonly:"",disabled:l.disabled,tabindex:l.disabled?-1:l.tabindex,"aria-labelledby":e.ariaLabelledby,"aria-label":e.ariaLabel,"aria-haspopup":"tree","aria-expanded":a.overlayVisible,"aria-controls":i.listId,onFocus:t[0]||(t[0]=s=>i.onFocus(s)),onBlur:t[1]||(t[1]=s=>i.onBlur(s)),onKeydown:t[2]||(t[2]=s=>i.onKeyDown(s))},l.inputProps),null,16,H)]),c("div",A,[c("div",{class:S(i.labelClass)},[h(e.$slots,"value",{value:i.selectedNodes,placeholder:l.placeholder},()=>[l.display==="comma"?(o(),d(u,{key:0},[m(p(i.label||"empty"),1)],64)):l.display==="chip"?(o(),d(u,{key:1},[(o(!0),d(u,null,K(i.selectedNodes,s=>(o(),d("div",{key:s.key,class:"p-treeselect-token"},[c("span",D,p(s.label),1)]))),128)),i.emptyValue?(o(),d(u,{key:0},[m(p(l.placeholder||"empty"),1)],64)):y("",!0)],64)):y("",!0)])],2)]),c("div",{class:"p-treeselect-trigger",role:"button","aria-haspopup":"tree","aria-expanded":a.overlayVisible},[h(e.$slots,"indicator",{},()=>[U])],8,P),v(w,{appendTo:l.appendTo},{default:C(()=>[v(T,{name:"p-connected-overlay",onEnter:i.onOverlayEnter,onLeave:i.onOverlayLeave,onAfterLeave:i.onOverlayAfterLeave},{default:C(()=>[a.overlayVisible?(o(),d("div",g({key:0,ref:i.overlayRef,onClick:t[5]||(t[5]=(...s)=>i.onOverlayClick&&i.onOverlayClick(...s)),class:i.panelStyleClass},l.panelProps,{onKeydown:t[6]||(t[6]=(...s)=>i.onOverlayKeydown&&i.onOverlayKeydown(...s))}),[h(e.$slots,"header",{value:l.modelValue,options:l.options}),c("div",{class:"p-treeselect-items-wrapper",style:E({"max-height":l.scrollHeight})},[v(k,{ref:"tree",id:i.listId,value:l.options,selectionMode:l.selectionMode,"onUpdate:selectionKeys":i.onSelectionChange,selectionKeys:l.modelValue,expandedKeys:a.expandedKeys,"onUpdate:expandedKeys":i.onNodeToggle,metaKeySelection:l.metaKeySelection,onNodeExpand:t[3]||(t[3]=s=>e.$emit("node-expand",s)),onNodeCollapse:t[4]||(t[4]=s=>e.$emit("node-collapse",s)),onNodeSelect:i.onNodeSelect,onNodeUnselect:i.onNodeUnselect,level:0},null,8,["id","value","selectionMode","onUpdate:selectionKeys","selectionKeys","expandedKeys","onUpdate:expandedKeys","metaKeySelection","onNodeSelect","onNodeUnselect"]),i.emptyOptions?(o(),d("div",M,[h(e.$slots,"empty",{},()=>[m(p(i.emptyMessageText),1)])])):y("",!0)],4),h(e.$slots,"footer",{value:l.modelValue,options:l.options})],16)):y("",!0)]),_:3},8,["onEnter","onLeave","onAfterLeave"])]),_:3},8,["appendTo"])],2)}function R(e,t){t===void 0&&(t={});var l=t.insertAt;if(!(!e||typeof document>"u")){var n=document.head||document.getElementsByTagName("head")[0],a=document.createElement("style");a.type="text/css",l==="top"&&n.firstChild?n.insertBefore(a,n.firstChild):n.appendChild(a),a.styleSheet?a.styleSheet.cssText=e:a.appendChild(document.createTextNode(e))}}var F=`
.p-treeselect {
    display: inline-flex;
    cursor: pointer;
    position: relative;
    user-select: none;
}
.p-treeselect-trigger {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
}
.p-treeselect-label-container {
    overflow: hidden;
    flex: 1 1 auto;
    cursor: pointer;
}
.p-treeselect-label {
    display: block;
    white-space: nowrap;
    cursor: pointer;
    overflow: hidden;
    text-overflow: ellipsis;
}
.p-treeselect-label-empty {
    overflow: hidden;
    visibility: hidden;
}
.p-treeselect-token {
    cursor: default;
    display: inline-flex;
    align-items: center;
    flex: 0 0 auto;
}
.p-treeselect .p-treeselect-panel {
    min-width: 100%;
}
.p-treeselect-panel {
    position: absolute;
    top: 0;
    left: 0;
}
.p-treeselect-items-wrapper {
    overflow: auto;
}
.p-fluid .p-treeselect {
    display: flex;
}
`;R(F);I.render=j;export{I as default};

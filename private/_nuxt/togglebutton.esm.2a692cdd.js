import{R as d,j as c,m as h,o as a,b as o,k as n,H as b,n as u,l as f,t as p}from"./entry.a8bdde5b.js";var m={name:"ToggleButton",emits:["update:modelValue","change","click","focus","blur"],props:{modelValue:Boolean,onIcon:String,offIcon:String,onLabel:{type:String,default:"Yes"},offLabel:{type:String,default:"No"},iconPos:{type:String,default:"left"},disabled:{type:Boolean,default:!1},tabindex:{type:Number,default:null},inputId:{type:String,default:null},inputClass:{type:[String,Object],default:null},inputStyle:{type:Object,default:null},inputProps:{type:null,default:null},"aria-labelledby":{type:String,default:null},"aria-label":{type:String,default:null}},outsideClickListener:null,data(){return{focused:!1}},mounted(){this.bindOutsideClickListener()},beforeUnmount(){this.unbindOutsideClickListener()},methods:{onClick(e){this.disabled||(this.$emit("update:modelValue",!this.modelValue),this.$emit("change",e),this.$emit("click",e),this.focused=!0)},onFocus(e){this.focused=!0,this.$emit("focus",e)},onBlur(e){this.focused=!1,this.$emit("blur",e)},bindOutsideClickListener(){this.outsideClickListener||(this.outsideClickListener=e=>{this.focused&&!this.$refs.container.contains(e.target)&&(this.focused=!1)},document.addEventListener("click",this.outsideClickListener))},unbindOutsideClickListener(){this.outsideClickListener&&(document.removeEventListener("click",this.outsideClickListener),this.outsideClickListener=null)}},computed:{buttonClass(){return["p-button p-togglebutton p-component",{"p-focus":this.focused,"p-button-icon-only":this.hasIcon&&!this.hasLabel,"p-disabled":this.disabled,"p-highlight":this.modelValue===!0}]},iconClass(){return[this.modelValue?this.onIcon:this.offIcon,"p-button-icon",{"p-button-icon-left":this.iconPos==="left"&&this.label,"p-button-icon-right":this.iconPos==="right"&&this.label}]},hasLabel(){return this.onLabel&&this.onLabel.length>0&&this.offLabel&&this.offLabel.length>0},hasIcon(){return this.onIcon&&this.onIcon.length>0&&this.offIcon&&this.offIcon.length>0},label(){return this.hasLabel?this.modelValue?this.onLabel:this.offLabel:"&nbsp;"}},directives:{ripple:d}};const g={class:"p-hidden-accessible"},L=["id","checked","value","aria-labelledby","aria-label"],k={class:"p-button-label"};function y(e,i,l,C,I,t){const r=c("ripple");return h((a(),o("div",{ref:"container",class:u(t.buttonClass),onClick:i[2]||(i[2]=s=>t.onClick(s))},[n("span",g,[n("input",b({id:l.inputId,type:"checkbox",role:"switch",class:l.inputClass,style:l.inputStyle,checked:l.modelValue,value:l.modelValue,"aria-labelledby":e.ariaLabelledby,"aria-label":e.ariaLabel,onFocus:i[0]||(i[0]=s=>t.onFocus(s)),onBlur:i[1]||(i[1]=s=>t.onBlur(s))},l.inputProps),null,16,L)]),t.hasIcon?(a(),o("span",{key:0,class:u(t.iconClass)},null,2)):f("",!0),n("span",k,p(t.label),1)],2)),[[r]])}m.render=y;export{m as default};
